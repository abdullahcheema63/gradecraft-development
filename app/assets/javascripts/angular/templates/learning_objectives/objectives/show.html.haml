%loading-message{'loading'=>'loShowCtrl.loading', 'message'=>"Loading..."}

.show-learning-objective{"ng-if"=>"!loShowCtrl.loading"}
  %section
    %h2.subtitle {{loShowCtrl.objective().name}}

    %h3.subtitle Overview
    %table.stacktable.info-table
      %tr{"ng-if"=>"loShowCtrl.objective().description"}
        %th Description:
        %td {{loShowCtrl.objective().description}}
        %tr{"ng-if"=>"loShowCtrl.objective().points_to_completion"}
          %th Earn to Achieve:
          %td {{loShowCtrl.objective().points_to_completion}}
        %tr{"ng-if"=>"loShowCtrl.objective().count_to_achieve"}
          %th Complete to Achieve:
          %td {{loShowCtrl.objective().count_to_achieve}} {{loShowCtrl.termFor('assignments')}}
        %tr{"ng-if"=>"!loShowCtrl.studentId && loShowCtrl.linkedAssignments.length > 0"}
          %th.capitalize Linked {{loShowCtrl.termFor("assignments")}} ({{loShowCtrl.linkedAssignments.length}}):
          %td
            %ul.no-style
              %li{"ng-repeat"=>"assignment in loShowCtrl.linkedAssignments"}
                %a{"ng-href"=>"/assignments/{{assignment.id}}"} {{assignment.name}}
      %tr{"ng-if"=>"loShowCtrl.studentId"}
        %th Progress:
        %td
          .progress-bar
            .fill{"ng-style"=>"{'width': {{loShowCtrl.percent_complete(loShowCtrl.studentId)}} + '%' }"}
          {{loShowCtrl.percent_complete(loShowCtrl.studentId)}}% complete

  -# Table for all students in the course
  %section{"ng-if"=>"!loShowCtrl.studentId"}
    %h3.subtitle Student Progress

    %table
      %thead
        %tr
          %th.sortable-header{"scope"=>"col",
                              "data-sortable-header-text"=>"Student",
                              "data-sortable-predicate"=>"full_name"}
          %th.sortable-header{"scope"=>"col",
                              "data-sortable-header-text"=>"{{loShowCtrl.termFor('assignments')}} Completed",
                              "data-sortable-predicate"=>"assignments-submitted"}
          %th.sortable-header{"scope"=>"col",
                              "data-sortable-header-text"=>"{{loShowCtrl.termFor('learning objectives')}} Graded",
                              "data-sortable-predicate"=>"assignments-graded"}
          %th.sortable-header{"scope"=>"col",
                              "data-sortable-header-text"=>"Progress",
                              "data-sortable-predicate"=>"status"}
      %tbody
        %tr{"ng-repeat"=>"student in loShowCtrl.students"}
          %td
            %a{"ng-href"=>"/students/{{student.id}}"} {{student.name}}
          -# TODO: need to update this to be the number of submissions + (number of grades - number of grades with submissions) - should include not-student-visible-grades
          %td
            %span{"ng-show"=>"loShowCtrl.observedOutcomes(student.id).length"} {{loShowCtrl.observedOutcomes(student.id).length}}
            %span {{loGradeOverviewCtrl.statusFor(objective.id)}}
          %td
            %span{"ng-show"=>"loShowCtrl.observedOutcomes(student.id).length"} {{loShowCtrl.observedOutcomes(student.id).length}}
            %span {{loGradeOverviewCtrl.statusFor(objective.id)}}
          %td
            %a{"ng-href"=>"{{loShowCtrl.showPath(student.id)}}"}
              %span{"ng-if"=>"loShowCtrl.numeric_progress(student.id) > 0"}
                .progress-bar
                  .fill{"ng-style"=>"{'width': {{loShowCtrl.percent_complete(student.id)}} + '%' }"}
                {{loShowCtrl.percent_complete(student.id)}}% complete


  -# Progress for an individual student
  %section{"ng-if"=>"loShowCtrl.studentId"}
    %h2.subtitle {{loShowCtrl.termFor('assignments')}} that meet this {{loShowCtrl.termFor('learning objective')}}

    %table
      %thead
        %tr
          %th.sortable-header{"scope"=>"col",
                              "data-sortable-header-text"=>"{{loShowCtrl.termFor('assignments')}}",
                              "data-sortable-predicate"=>"name"}
          %th.sortable-header{"scope"=>"col",
                              "data-sortable-header-text"=>"Submitted?",
                              "data-sortable-predicate"=>"student.submission_submitted_at"}
          %th.sortableHeader{"scope"=>"col",
                             "data-sortable-header-text"=>"Assessment",
                             "ng-click"=>"loShowCtrl.sortByAssessment()"}
          %th.sortable-header{"scope"=>"col",
                              "data-sortable-header-text"=>"Resubmit?",
                              "data-sortable-predicate"=>"resubmit"}
      %tbody
        %tr{"ng-repeat"=>"assignment in loShowCtrl.linkedAssignments | orderBy : loShowCtrl.sortable.predicate : loShowCtrl.sortable.reverse"}
          %td
            %a{"ng-href"=>"/assignments/{{assignment.id}}"} {{assignment.name}}
          %td
            {{student.submission_submitted_at}}
          %td
            %a{"ng-if"=>"loShowCtrl.gradeExists(assignment.id)",
               "ng-href"=>"{{loShowCtrl.gradePath(loShowCtrl.studentId, assignment.id)}}"}
              %span.level-flagged-value{"ng-class"=>"loShowCtrl.earnedOutcome(loShowCtrl.studentId, assignment.id).flagged_value"} {{loShowCtrl.earnedOutcome(loShowCtrl.studentId, assignment.id).readable_flagged_value}}
          %td
            -# TODO: this
