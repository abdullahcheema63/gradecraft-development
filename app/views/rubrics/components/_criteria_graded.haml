- rubric.criteria.ordered.includes(levels: :level_badges).each_with_index do |criterion, cindex|
  .criterion{:id => "criterion-#{cindex}"}
    .criterion-heading
      %h4.criterion-name= "#{criterion.name}: " "#{points criterion.max_points} Points"
      %p.criterion-description= criterion.description

    %ul.level-tabs.rubric-levels{:role => "tablist"}
      - criterion.levels.ordered.sorted.each_with_index do |level, tindex|
        %li.level-tab.rubric-level{:class => ("earned" if level.earned_for?(student.id)), id: "tab-#{cindex}-#{tindex}", :role => "tab", "aria-controls" => "tabpanel-#{cindex}-#{tindex}", "aria-selected" => (level.earned_for?(student.id) ? "true" : "false"), "tabindex" => (level.earned_for?(student.id) ? "0" : "-1")}
          - if level.earned_for?(student.id)
            = glyph("check")
          %span.level-name= level.name
          - if !level.hide_analytics?
            - unless level.criterion_grades.empty?
              %p.graded-students= "#{pluralize(level.criterion_grades.size, 'student')} earned this level"

    .tab-panel-container{"data-start-index" => find_earned_rubric_grade(criterion, student.id)}
      - criterion.levels.ordered.sorted.each_with_index do |level, lindex|
        .tab-panel{:class => ("earned selected" if level.earned_for?(student.id)), :id => "tabpanel-#{cindex}-#{lindex}", :role => "tabpanel", "aria-labelledby" => "tab-#{cindex}-#{lindex}"}
          .tab-panel-header
            - if level.earned_for?(student.id)
              %span= glyph("check")
            %h5.level-name= "#{level.name}"
          .tab-panel-body
            = render partial: "rubrics/components/level", locals: { level: level, student: student, include_grade_info: include_grade_info }
            - if level.earned_for?(student.id) && criterion.comments_for(student.id).present?
              %section.grader-feedback
                %h6 Comments
                .level.level-comments.comments-box
                  = raw criterion.comments_for(student.id)
